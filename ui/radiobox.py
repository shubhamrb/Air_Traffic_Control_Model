from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_radioBox(object):
    def setupUi(self, radioBox):
        radioBox.setObjectName("radioBox")
        radioBox.setEnabled(True)
        radioBox.resize(367, 104)
        self.gridLayout_2 = QtWidgets.QGridLayout(radioBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.removeBox_button = QtWidgets.QToolButton(radioBox)
        self.removeBox_button.setAutoRaise(True)
        self.removeBox_button.setObjectName("removeBox_button")
        self.gridLayout_2.addWidget(self.removeBox_button, 2, 2, 1, 1)
        self.box_frame = QtWidgets.QFrame(radioBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.box_frame.sizePolicy().hasHeightForWidth())
        self.box_frame.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.box_frame.setFont(font)
        self.box_frame.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.box_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.box_frame.setObjectName("box_frame")
        self.gridLayout = QtWidgets.QGridLayout(self.box_frame)
        self.gridLayout.setObjectName("gridLayout")
        self.softVolume_tickBox = QtWidgets.QCheckBox(self.box_frame)
        self.softVolume_tickBox.setObjectName("softVolume_tickBox")
        self.gridLayout.addWidget(self.softVolume_tickBox, 1, 2, 1, 1)
        self.PTT_button = QtWidgets.QToolButton(self.box_frame)
        self.PTT_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PTT_button.sizePolicy().hasHeightForWidth())
        self.PTT_button.setSizePolicy(sizePolicy)
        self.PTT_button.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PTT_button.setCheckable(True)
        self.PTT_button.setObjectName("PTT_button")
        self.gridLayout.addWidget(self.PTT_button, 0, 0, 2, 1)
        self.frequency_combo = FrequencyPickCombo(self.box_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frequency_combo.sizePolicy().hasHeightForWidth())
        self.frequency_combo.setSizePolicy(sizePolicy)
        self.frequency_combo.setEditable(True)
        self.frequency_combo.setObjectName("frequency_combo")
        self.gridLayout.addWidget(self.frequency_combo, 0, 1, 1, 2)
        self.kbdPTT_checkBox = QtWidgets.QCheckBox(self.box_frame)
        self.kbdPTT_checkBox.setChecked(False)
        self.kbdPTT_checkBox.setObjectName("kbdPTT_checkBox")
        self.gridLayout.addWidget(self.kbdPTT_checkBox, 1, 1, 1, 1)
        self.gridLayout_2.addWidget(self.box_frame, 0, 0, 3, 1)
        spacerItem = QtWidgets.QSpacerItem(5, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 1, 1, 1, 1)
        self.onOff_button = QtWidgets.QToolButton(radioBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.onOff_button.sizePolicy().hasHeightForWidth())
        self.onOff_button.setSizePolicy(sizePolicy)
        self.onOff_button.setCheckable(True)
        self.onOff_button.setObjectName("onOff_button")
        self.gridLayout_2.addWidget(self.onOff_button, 0, 2, 1, 1)
        self.RDF_tickBox = QtWidgets.QCheckBox(radioBox)
        self.RDF_tickBox.setObjectName("RDF_tickBox")
        self.gridLayout_2.addWidget(self.RDF_tickBox, 1, 2, 1, 1)

        self.retranslateUi(radioBox)
        QtCore.QMetaObject.connectSlotsByName(radioBox)
        radioBox.setTabOrder(self.PTT_button, self.frequency_combo)
        radioBox.setTabOrder(self.frequency_combo, self.kbdPTT_checkBox)
        radioBox.setTabOrder(self.kbdPTT_checkBox, self.softVolume_tickBox)
        radioBox.setTabOrder(self.softVolume_tickBox, self.onOff_button)
        radioBox.setTabOrder(self.onOff_button, self.RDF_tickBox)
        radioBox.setTabOrder(self.RDF_tickBox, self.removeBox_button)

    def retranslateUi(self, radioBox):
        _translate = QtCore.QCoreApplication.translate
        self.removeBox_button.setToolTip(_translate("radioBox", "Remove radio box"))
        self.removeBox_button.setText(_translate("radioBox", "Close"))
        self.softVolume_tickBox.setToolTip(_translate("radioBox", "Reduce volume"))
        self.softVolume_tickBox.setText(_translate("radioBox", "Soft volume"))
        self.PTT_button.setText(_translate("radioBox", "PTT"))
        self.frequency_combo.setToolTip(_translate("radioBox", "Type+ENTER to tune manually"))
        self.kbdPTT_checkBox.setToolTip(_translate("radioBox", "Key in radio with left-Ctrl"))
        self.kbdPTT_checkBox.setText(_translate("radioBox", "Kbd PTT"))
        self.onOff_button.setText(_translate("radioBox", "On/off"))
        self.RDF_tickBox.setToolTip(_translate("radioBox", "Include in monitored RDF frequencies"))
        self.RDF_tickBox.setText(_translate("radioBox", "RDF"))

from gui.widgets.basicWidgets import FrequencyPickCombo
