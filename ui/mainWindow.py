from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_mainWindow(object):
    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(774, 563)
        mainWindow.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.centralWidget = QtWidgets.QWidget(mainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralWidget.sizePolicy().hasHeightForWidth())
        self.centralWidget.setSizePolicy(sizePolicy)
        self.centralWidget.setObjectName("centralWidget")
        mainWindow.setCentralWidget(self.centralWidget)
        self.menubar = QtWidgets.QMenuBar(mainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 774, 22))
        self.menubar.setObjectName("menubar")
        self.system_menu = QtWidgets.QMenu(self.menubar)
        self.system_menu.setObjectName("system_menu")
        self.system_reload_menu = QtWidgets.QMenu(self.system_menu)
        self.system_reload_menu.setObjectName("system_reload_menu")
        self.menuTools = QtWidgets.QMenu(self.system_menu)
        self.menuTools.setObjectName("menuTools")
        self.view_menu = QtWidgets.QMenu(self.menubar)
        self.view_menu.setObjectName("view_menu")
        self.additionalViews_menu = QtWidgets.QMenu(self.view_menu)
        self.additionalViews_menu.setObjectName("additionalViews_menu")
        self.menuDocks = QtWidgets.QMenu(self.view_menu)
        self.menuDocks.setObjectName("menuDocks")
        self.menuWorkspace = QtWidgets.QMenu(self.view_menu)
        self.menuWorkspace.setObjectName("menuWorkspace")
        self.help_menu = QtWidgets.QMenu(self.menubar)
        self.help_menu.setObjectName("help_menu")
        self.options_menu = QtWidgets.QMenu(self.menubar)
        self.options_menu.setObjectName("options_menu")
        self.cheat_menu = QtWidgets.QMenu(self.menubar)
        self.cheat_menu.setObjectName("cheat_menu")
        self.towerView_cheat_menu = QtWidgets.QMenu(self.cheat_menu)
        self.towerView_cheat_menu.setObjectName("towerView_cheat_menu")
        self.solo_cheat_menu = QtWidgets.QMenu(self.cheat_menu)
        self.solo_cheat_menu.setObjectName("solo_cheat_menu")
        mainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setEnabled(True)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)
        self.FPLlist_dock = QtWidgets.QDockWidget(mainWindow)
        self.FPLlist_dock.setFloating(False)
        self.FPLlist_dock.setObjectName("FPLlist_dock")
        self.FPLlist_pane = FlightPlansPanel()
        self.FPLlist_pane.setObjectName("FPLlist_pane")
        self.FPLlist_dock.setWidget(self.FPLlist_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.FPLlist_dock)
        self.radioTextChat_dock = QtWidgets.QDockWidget(mainWindow)
        self.radioTextChat_dock.setEnabled(True)
        self.radioTextChat_dock.setFloating(False)
        self.radioTextChat_dock.setObjectName("radioTextChat_dock")
        self.radioTextChat_pane = RadioTextChatPanel()
        self.radioTextChat_pane.setObjectName("radioTextChat_pane")
        self.radioTextChat_dock.setWidget(self.radioTextChat_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.radioTextChat_dock)
        self.radio_dock = QtWidgets.QDockWidget(mainWindow)
        self.radio_dock.setEnabled(True)
        self.radio_dock.setFloating(False)
        self.radio_dock.setObjectName("radio_dock")
        self.radio_pane = RadioCentrePane()
        self.radio_pane.setObjectName("radio_pane")
        self.radio_dock.setWidget(self.radio_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.radio_dock)
        self.selection_info_dock = QtWidgets.QDockWidget(mainWindow)
        self.selection_info_dock.setObjectName("selection_info_dock")
        self.selection_info_pane = SelectionInfoPane()
        self.selection_info_pane.setObjectName("selection_info_pane")
        self.selection_info_dock.setWidget(self.selection_info_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.selection_info_dock)
        self.weather_dock = QtWidgets.QDockWidget(mainWindow)
        self.weather_dock.setFloating(False)
        self.weather_dock.setObjectName("weather_dock")
        self.weather_pane = WeatherPane()
        self.weather_pane.setObjectName("weather_pane")
        self.weather_dock.setWidget(self.weather_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.weather_dock)
        self.strip_dock = QtWidgets.QDockWidget(mainWindow)
        self.strip_dock.setMinimumSize(QtCore.QSize(83, 41))
        self.strip_dock.setObjectName("strip_dock")
        self.strip_pane = StripRacksPane()
        self.strip_pane.setObjectName("strip_pane")
        self.strip_dock.setWidget(self.strip_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.strip_dock)
        self.navigator_dock = QtWidgets.QDockWidget(mainWindow)
        self.navigator_dock.setFloating(False)
        self.navigator_dock.setObjectName("navigator_dock")
        self.navigator_pane = NavigatorFrame()
        self.navigator_pane.setObjectName("navigator_pane")
        self.navigator_dock.setWidget(self.navigator_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.navigator_dock)
        self.notification_dock = QtWidgets.QDockWidget(mainWindow)
        self.notification_dock.setFloating(False)
        self.notification_dock.setObjectName("notification_dock")
        self.notification_pane = NotifierFrame()
        self.notification_pane.setObjectName("notification_pane")
        self.notification_dock.setWidget(self.notification_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.notification_dock)
        self.notepads_dock = QtWidgets.QDockWidget(mainWindow)
        self.notepads_dock.setEnabled(True)
        self.notepads_dock.setFloating(False)
        self.notepads_dock.setObjectName("notepads_dock")
        self.notepads_pane = NotepadPane()
        self.notepads_pane.setObjectName("notepads_pane")
        self.notepads_dock.setWidget(self.notepads_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.notepads_dock)
        self.handover_dock = QtWidgets.QDockWidget(mainWindow)
        self.handover_dock.setObjectName("handover_dock")
        self.handover_pane = HandoverPane()
        self.handover_pane.setObjectName("handover_pane")
        self.handover_dock.setWidget(self.handover_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.handover_dock)
        self.instructions_dock = QtWidgets.QDockWidget(mainWindow)
        self.instructions_dock.setObjectName("instructions_dock")
        self.instructions_pane = InstructionsPanel()
        self.instructions_pane.setObjectName("instructions_pane")
        self.instructions_dock.setWidget(self.instructions_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.instructions_dock)
        self.towerView_dock = QtWidgets.QDockWidget(mainWindow)
        self.towerView_dock.setObjectName("towerView_dock")
        self.towerView_pane = TowerViewControllerPane()
        self.towerView_pane.setObjectName("towerView_pane")
        self.towerView_dock.setWidget(self.towerView_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.towerView_dock)
        self.general_toolbar = QtWidgets.QToolBar(mainWindow)
        self.general_toolbar.setObjectName("general_toolbar")
        mainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.general_toolbar)
        self.docks_toolbar = QtWidgets.QToolBar(mainWindow)
        self.docks_toolbar.setObjectName("docks_toolbar")
        mainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.docks_toolbar)
        mainWindow.insertToolBarBreak(self.docks_toolbar)
        self.stripActions_toolbar = QtWidgets.QToolBar(mainWindow)
        self.stripActions_toolbar.setObjectName("stripActions_toolbar")
        mainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.stripActions_toolbar)
        self.workspace_toolbar = QtWidgets.QToolBar(mainWindow)
        self.workspace_toolbar.setObjectName("workspace_toolbar")
        mainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.workspace_toolbar)
        self.selectionInfo_toolbar = QtWidgets.QToolBar(mainWindow)
        self.selectionInfo_toolbar.setObjectName("selectionInfo_toolbar")
        mainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.selectionInfo_toolbar)
        self.rwyBoxes_dock = QtWidgets.QDockWidget(mainWindow)
        self.rwyBoxes_dock.setObjectName("rwyBoxes_dock")
        self.rwyBox_pane = RunwayBoxPanel()
        self.rwyBox_pane.setObjectName("rwyBox_pane")
        self.rwyBoxes_dock.setWidget(self.rwyBox_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.rwyBoxes_dock)
        self.atcTextChat_dock = QtWidgets.QDockWidget(mainWindow)
        self.atcTextChat_dock.setObjectName("atcTextChat_dock")
        self.atcTextChat_pane = AtcTextChatPanel()
        self.atcTextChat_pane.setObjectName("atcTextChat_pane")
        self.atcTextChat_dock.setWidget(self.atcTextChat_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.atcTextChat_dock)
        self.radarAssistance_toolbar = QtWidgets.QToolBar(mainWindow)
        self.radarAssistance_toolbar.setObjectName("radarAssistance_toolbar")
        mainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.radarAssistance_toolbar)
        self.CPDLC_dock = QtWidgets.QDockWidget(mainWindow)
        self.CPDLC_dock.setObjectName("CPDLC_dock")
        self.cpdlc_pane = CpdlcPanel()
        self.cpdlc_pane.setObjectName("cpdlc_pane")
        self.CPDLC_dock.setWidget(self.cpdlc_pane)
        mainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.CPDLC_dock)
        self.FPLs_dockView_action = QtWidgets.QAction(mainWindow)
        self.FPLs_dockView_action.setCheckable(False)
        self.FPLs_dockView_action.setChecked(False)
        self.FPLs_dockView_action.setEnabled(True)
        self.FPLs_dockView_action.setObjectName("FPLs_dockView_action")
        self.fgcom_dockView_action = QtWidgets.QAction(mainWindow)
        self.fgcom_dockView_action.setEnabled(True)
        self.fgcom_dockView_action.setObjectName("fgcom_dockView_action")
        self.radarContactDetails_dockView_action = QtWidgets.QAction(mainWindow)
        self.radarContactDetails_dockView_action.setEnabled(True)
        self.radarContactDetails_dockView_action.setObjectName("radarContactDetails_dockView_action")
        self.connectFlightGearMP_system_action = QtWidgets.QAction(mainWindow)
        self.connectFlightGearMP_system_action.setCheckable(True)
        self.connectFlightGearMP_system_action.setObjectName("connectFlightGearMP_system_action")
        self.quit_system_action = QtWidgets.QAction(mainWindow)
        self.quit_system_action.setObjectName("quit_system_action")
        self.about_help_action = QtWidgets.QAction(mainWindow)
        self.about_help_action.setObjectName("about_help_action")
        self.radioTextChat_dockView_action = QtWidgets.QAction(mainWindow)
        self.radioTextChat_dockView_action.setCheckable(False)
        self.radioTextChat_dockView_action.setChecked(False)
        self.radioTextChat_dockView_action.setEnabled(True)
        self.radioTextChat_dockView_action.setObjectName("radioTextChat_dockView_action")
        self.weather_dockView_action = QtWidgets.QAction(mainWindow)
        self.weather_dockView_action.setEnabled(True)
        self.weather_dockView_action.setObjectName("weather_dockView_action")
        self.strips_dockView_action = QtWidgets.QAction(mainWindow)
        self.strips_dockView_action.setEnabled(True)
        self.strips_dockView_action.setObjectName("strips_dockView_action")
        self.navpoints_dockView_action = QtWidgets.QAction(mainWindow)
        self.navpoints_dockView_action.setObjectName("navpoints_dockView_action")
        self.radarCheatMode_cheat_action = QtWidgets.QAction(mainWindow)
        self.radarCheatMode_cheat_action.setCheckable(True)
        self.radarCheatMode_cheat_action.setObjectName("radarCheatMode_cheat_action")
        self.generalSettings_options_action = QtWidgets.QAction(mainWindow)
        self.generalSettings_options_action.setEnabled(True)
        self.generalSettings_options_action.setObjectName("generalSettings_options_action")
        self.notificationArea_dockView_action = QtWidgets.QAction(mainWindow)
        self.notificationArea_dockView_action.setObjectName("notificationArea_dockView_action")
        self.environmentInfo_view_action = QtWidgets.QAction(mainWindow)
        self.environmentInfo_view_action.setObjectName("environmentInfo_view_action")
        self.fgcomEchoTest_system_action = QtWidgets.QAction(mainWindow)
        self.fgcomEchoTest_system_action.setObjectName("fgcomEchoTest_system_action")
        self.announceFgSession_system_action = QtWidgets.QAction(mainWindow)
        self.announceFgSession_system_action.setObjectName("announceFgSession_system_action")
        self.soloSessionSettings_system_action = QtWidgets.QAction(mainWindow)
        self.soloSessionSettings_system_action.setObjectName("soloSessionSettings_system_action")
        self.quickReference_help_action = QtWidgets.QAction(mainWindow)
        self.quickReference_help_action.setObjectName("quickReference_help_action")
        self.notepads_dockView_action = QtWidgets.QAction(mainWindow)
        self.notepads_dockView_action.setObjectName("notepads_dockView_action")
        self.primaryRadar_options_action = QtWidgets.QAction(mainWindow)
        self.primaryRadar_options_action.setCheckable(True)
        self.primaryRadar_options_action.setObjectName("primaryRadar_options_action")
        self.handovers_dockView_action = QtWidgets.QAction(mainWindow)
        self.handovers_dockView_action.setObjectName("handovers_dockView_action")
        self.repositionBgImages_system_action = QtWidgets.QAction(mainWindow)
        self.repositionBgImages_system_action.setObjectName("repositionBgImages_system_action")
        self.soloSession_system_action = QtWidgets.QAction(mainWindow)
        self.soloSession_system_action.setCheckable(True)
        self.soloSession_system_action.setObjectName("soloSession_system_action")
        self.instructions_dockView_action = QtWidgets.QAction(mainWindow)
        self.instructions_dockView_action.setObjectName("instructions_dockView_action")
        self.killSelectedAircraft_cheat_action = QtWidgets.QAction(mainWindow)
        self.killSelectedAircraft_cheat_action.setObjectName("killSelectedAircraft_cheat_action")
        self.pauseSimulation_cheat_action = QtWidgets.QAction(mainWindow)
        self.pauseSimulation_cheat_action.setCheckable(True)
        self.pauseSimulation_cheat_action.setObjectName("pauseSimulation_cheat_action")
        self.routeConflictWarnings_options_action = QtWidgets.QAction(mainWindow)
        self.routeConflictWarnings_options_action.setCheckable(True)
        self.routeConflictWarnings_options_action.setObjectName("routeConflictWarnings_options_action")
        self.runwaysInUse_options_action = QtWidgets.QAction(mainWindow)
        self.runwaysInUse_options_action.setObjectName("runwaysInUse_options_action")
        self.towerView_view_action = QtWidgets.QAction(mainWindow)
        self.towerView_view_action.setCheckable(True)
        self.towerView_view_action.setObjectName("towerView_view_action")
        self.recallDiscardedStrip_cheat_action = QtWidgets.QAction(mainWindow)
        self.recallDiscardedStrip_cheat_action.setObjectName("recallDiscardedStrip_cheat_action")
        self.towerView_dockView_action = QtWidgets.QAction(mainWindow)
        self.towerView_dockView_action.setObjectName("towerView_dockView_action")
        self.ensureDayLight_cheat_action = QtWidgets.QAction(mainWindow)
        self.ensureDayLight_cheat_action.setObjectName("ensureDayLight_cheat_action")
        self.ensureClearWeather_cheat_action = QtWidgets.QAction(mainWindow)
        self.ensureClearWeather_cheat_action.setCheckable(True)
        self.ensureClearWeather_cheat_action.setObjectName("ensureClearWeather_cheat_action")
        self.videoTutorial_help_action = QtWidgets.QAction(mainWindow)
        self.videoTutorial_help_action.setObjectName("videoTutorial_help_action")
        self.changeTowerHeight_cheat_action = QtWidgets.QAction(mainWindow)
        self.changeTowerHeight_cheat_action.setObjectName("changeTowerHeight_cheat_action")
        self.spawnAircraft_cheat_action = QtWidgets.QAction(mainWindow)
        self.spawnAircraft_cheat_action.setObjectName("spawnAircraft_cheat_action")
        self.reloadBgImages_system_action = QtWidgets.QAction(mainWindow)
        self.reloadBgImages_system_action.setObjectName("reloadBgImages_system_action")
        self.reloadRoutePresets_system_action = QtWidgets.QAction(mainWindow)
        self.reloadRoutePresets_system_action.setObjectName("reloadRoutePresets_system_action")
        self.teacherSession_system_action = QtWidgets.QAction(mainWindow)
        self.teacherSession_system_action.setCheckable(True)
        self.teacherSession_system_action.setObjectName("teacherSession_system_action")
        self.studentSession_system_action = QtWidgets.QAction(mainWindow)
        self.studentSession_system_action.setCheckable(True)
        self.studentSession_system_action.setObjectName("studentSession_system_action")
        self.systemSettings_system_action = QtWidgets.QAction(mainWindow)
        self.systemSettings_system_action.setObjectName("systemSettings_system_action")
        self.addViewer_view_action = QtWidgets.QAction(mainWindow)
        self.addViewer_view_action.setObjectName("addViewer_view_action")
        self.removeViewer_view_action = QtWidgets.QAction(mainWindow)
        self.removeViewer_view_action.setObjectName("removeViewer_view_action")
        self.activateAdditionalViewers_view_action = QtWidgets.QAction(mainWindow)
        self.activateAdditionalViewers_view_action.setCheckable(True)
        self.activateAdditionalViewers_view_action.setObjectName("activateAdditionalViewers_view_action")
        self.listViewers_view_action = QtWidgets.QAction(mainWindow)
        self.listViewers_view_action.setObjectName("listViewers_view_action")
        self.openStreetMap_system_action = QtWidgets.QAction(mainWindow)
        self.openStreetMap_system_action.setObjectName("openStreetMap_system_action")
        self.reloadColourConfig_system_action = QtWidgets.QAction(mainWindow)
        self.reloadColourConfig_system_action.setObjectName("reloadColourConfig_system_action")
        self.notificationSounds_options_action = QtWidgets.QAction(mainWindow)
        self.notificationSounds_options_action.setCheckable(True)
        self.notificationSounds_options_action.setObjectName("notificationSounds_options_action")
        self.changeLocation_system_action = QtWidgets.QAction(mainWindow)
        self.changeLocation_system_action.setObjectName("changeLocation_system_action")
        self.runwayOccupationWarnings_options_action = QtWidgets.QAction(mainWindow)
        self.runwayOccupationWarnings_options_action.setCheckable(True)
        self.runwayOccupationWarnings_options_action.setObjectName("runwayOccupationWarnings_options_action")
        self.toolbars_view_menuAction = QtWidgets.QAction(mainWindow)
        self.toolbars_view_menuAction.setObjectName("toolbars_view_menuAction")
        self.trafficIdentification_options_action = QtWidgets.QAction(mainWindow)
        self.trafficIdentification_options_action.setCheckable(True)
        self.trafficIdentification_options_action.setObjectName("trafficIdentification_options_action")
        self.newStrip_action = QtWidgets.QAction(mainWindow)
        self.newStrip_action.setObjectName("newStrip_action")
        self.newFPL_action = QtWidgets.QAction(mainWindow)
        self.newFPL_action.setObjectName("newFPL_action")
        self.newLinkedStrip_action = QtWidgets.QAction(mainWindow)
        self.newLinkedStrip_action.setObjectName("newLinkedStrip_action")
        self.newLinkedFPL_action = QtWidgets.QAction(mainWindow)
        self.newLinkedFPL_action.setObjectName("newLinkedFPL_action")
        self.reloadAdditionalViewers_system_action = QtWidgets.QAction(mainWindow)
        self.reloadAdditionalViewers_system_action.setObjectName("reloadAdditionalViewers_system_action")
        self.startTimer1_action = QtWidgets.QAction(mainWindow)
        self.startTimer1_action.setObjectName("startTimer1_action")
        self.startTimer2_action = QtWidgets.QAction(mainWindow)
        self.startTimer2_action.setObjectName("startTimer2_action")
        self.forceStartTimer1_action = QtWidgets.QAction(mainWindow)
        self.forceStartTimer1_action.setObjectName("forceStartTimer1_action")
        self.forceStartTimer2_action = QtWidgets.QAction(mainWindow)
        self.forceStartTimer2_action.setObjectName("forceStartTimer2_action")
        self.saveDockLayout_view_action = QtWidgets.QAction(mainWindow)
        self.saveDockLayout_view_action.setObjectName("saveDockLayout_view_action")
        self.recallWindowState_view_action = QtWidgets.QAction(mainWindow)
        self.recallWindowState_view_action.setObjectName("recallWindowState_view_action")
        self.locationSettings_system_action = QtWidgets.QAction(mainWindow)
        self.locationSettings_system_action.setObjectName("locationSettings_system_action")
        self.viewpointSelection_view_menuAction = QtWidgets.QAction(mainWindow)
        self.viewpointSelection_view_menuAction.setObjectName("viewpointSelection_view_menuAction")
        self.showRecognisedVoiceStrings_cheat_action = QtWidgets.QAction(mainWindow)
        self.showRecognisedVoiceStrings_cheat_action.setCheckable(True)
        self.showRecognisedVoiceStrings_cheat_action.setObjectName("showRecognisedVoiceStrings_cheat_action")
        self.popUpMsgOnRejectedInstr_cheat_action = QtWidgets.QAction(mainWindow)
        self.popUpMsgOnRejectedInstr_cheat_action.setCheckable(True)
        self.popUpMsgOnRejectedInstr_cheat_action.setObjectName("popUpMsgOnRejectedInstr_cheat_action")
        self.approachSpacingHints_options_action = QtWidgets.QAction(mainWindow)
        self.approachSpacingHints_options_action.setCheckable(True)
        self.approachSpacingHints_options_action.setObjectName("approachSpacingHints_options_action")
        self.airportGateway_system_action = QtWidgets.QAction(mainWindow)
        self.airportGateway_system_action.setObjectName("airportGateway_system_action")
        self.measuringLogsCoordinates_system_action = QtWidgets.QAction(mainWindow)
        self.measuringLogsCoordinates_system_action.setCheckable(True)
        self.measuringLogsCoordinates_system_action.setObjectName("measuringLogsCoordinates_system_action")
        self.newLooseStripBay_view_action = QtWidgets.QAction(mainWindow)
        self.newLooseStripBay_view_action.setObjectName("newLooseStripBay_view_action")
        self.newRadarScreen_view_action = QtWidgets.QAction(mainWindow)
        self.newRadarScreen_view_action.setObjectName("newRadarScreen_view_action")
        self.popOutCurrentWindow_view_action = QtWidgets.QAction(mainWindow)
        self.popOutCurrentWindow_view_action.setObjectName("popOutCurrentWindow_view_action")
        self.windowedWorkspace_view_action = QtWidgets.QAction(mainWindow)
        self.windowedWorkspace_view_action.setCheckable(True)
        self.windowedWorkspace_view_action.setObjectName("windowedWorkspace_view_action")
        self.newStripRackPanel_view_action = QtWidgets.QAction(mainWindow)
        self.newStripRackPanel_view_action.setObjectName("newStripRackPanel_view_action")
        self.runwayBoxes_dockView_action = QtWidgets.QAction(mainWindow)
        self.runwayBoxes_dockView_action.setObjectName("runwayBoxes_dockView_action")
        self.reclaimPoppedOutWindows_view_action = QtWidgets.QAction(mainWindow)
        self.reclaimPoppedOutWindows_view_action.setObjectName("reclaimPoppedOutWindows_view_action")
        self.extractSectorFile_system_action = QtWidgets.QAction(mainWindow)
        self.extractSectorFile_system_action.setObjectName("extractSectorFile_system_action")
        self.atcTextChat_dockView_action = QtWidgets.QAction(mainWindow)
        self.atcTextChat_dockView_action.setObjectName("atcTextChat_dockView_action")
        self.unitConversionTool_view_action = QtWidgets.QAction(mainWindow)
        self.unitConversionTool_view_action.setObjectName("unitConversionTool_view_action")
        self.worldAirportNavigator_view_action = QtWidgets.QAction(mainWindow)
        self.worldAirportNavigator_view_action.setObjectName("worldAirportNavigator_view_action")
        self.cpdlc_dockView_action = QtWidgets.QAction(mainWindow)
        self.cpdlc_dockView_action.setObjectName("cpdlc_dockView_action")
        self.reloadEntryExitPoints_system_action = QtWidgets.QAction(mainWindow)
        self.reloadEntryExitPoints_system_action.setObjectName("reloadEntryExitPoints_system_action")
        self.teachingConsole_view_action = QtWidgets.QAction(mainWindow)
        self.teachingConsole_view_action.setObjectName("teachingConsole_view_action")
        self.FAQ_help_action = QtWidgets.QAction(mainWindow)
        self.FAQ_help_action.setObjectName("FAQ_help_action")
        self.verticalRwyBoxLayout_view_action = QtWidgets.QAction(mainWindow)
        self.verticalRwyBoxLayout_view_action.setCheckable(True)
        self.verticalRwyBoxLayout_view_action.setObjectName("verticalRwyBoxLayout_view_action")
        self.system_reload_menu.addAction(self.reloadAdditionalViewers_system_action)
        self.system_reload_menu.addAction(self.reloadBgImages_system_action)
        self.system_reload_menu.addAction(self.reloadColourConfig_system_action)
        self.system_reload_menu.addAction(self.reloadRoutePresets_system_action)
        self.system_reload_menu.addAction(self.reloadEntryExitPoints_system_action)
        self.menuTools.addAction(self.measuringLogsCoordinates_system_action)
        self.menuTools.addAction(self.extractSectorFile_system_action)
        self.menuTools.addAction(self.repositionBgImages_system_action)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.airportGateway_system_action)
        self.menuTools.addAction(self.openStreetMap_system_action)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.announceFgSession_system_action)
        self.menuTools.addAction(self.fgcomEchoTest_system_action)
        self.system_menu.addAction(self.soloSession_system_action)
        self.system_menu.addAction(self.connectFlightGearMP_system_action)
        self.system_menu.addAction(self.teacherSession_system_action)
        self.system_menu.addAction(self.studentSession_system_action)
        self.system_menu.addSeparator()
        self.system_menu.addAction(self.system_reload_menu.menuAction())
        self.system_menu.addAction(self.menuTools.menuAction())
        self.system_menu.addAction(self.soloSessionSettings_system_action)
        self.system_menu.addAction(self.locationSettings_system_action)
        self.system_menu.addAction(self.systemSettings_system_action)
        self.system_menu.addSeparator()
        self.system_menu.addAction(self.changeLocation_system_action)
        self.system_menu.addAction(self.quit_system_action)
        self.additionalViews_menu.addAction(self.activateAdditionalViewers_view_action)
        self.additionalViews_menu.addSeparator()
        self.additionalViews_menu.addAction(self.listViewers_view_action)
        self.additionalViews_menu.addAction(self.addViewer_view_action)
        self.additionalViews_menu.addAction(self.removeViewer_view_action)
        self.menuDocks.addAction(self.saveDockLayout_view_action)
        self.menuDocks.addAction(self.recallWindowState_view_action)
        self.menuDocks.addSeparator()
        self.menuDocks.addAction(self.handovers_dockView_action)
        self.menuDocks.addAction(self.atcTextChat_dockView_action)
        self.menuDocks.addAction(self.cpdlc_dockView_action)
        self.menuDocks.addAction(self.FPLs_dockView_action)
        self.menuDocks.addAction(self.instructions_dockView_action)
        self.menuDocks.addAction(self.navpoints_dockView_action)
        self.menuDocks.addAction(self.notepads_dockView_action)
        self.menuDocks.addAction(self.notificationArea_dockView_action)
        self.menuDocks.addAction(self.radarContactDetails_dockView_action)
        self.menuDocks.addAction(self.fgcom_dockView_action)
        self.menuDocks.addAction(self.radioTextChat_dockView_action)
        self.menuDocks.addAction(self.runwayBoxes_dockView_action)
        self.menuDocks.addAction(self.strips_dockView_action)
        self.menuDocks.addAction(self.towerView_dockView_action)
        self.menuDocks.addAction(self.weather_dockView_action)
        self.menuWorkspace.addAction(self.windowedWorkspace_view_action)
        self.menuWorkspace.addAction(self.popOutCurrentWindow_view_action)
        self.menuWorkspace.addAction(self.reclaimPoppedOutWindows_view_action)
        self.menuWorkspace.addSeparator()
        self.menuWorkspace.addAction(self.newRadarScreen_view_action)
        self.menuWorkspace.addAction(self.newLooseStripBay_view_action)
        self.menuWorkspace.addAction(self.newStripRackPanel_view_action)
        self.view_menu.addAction(self.menuDocks.menuAction())
        self.view_menu.addAction(self.toolbars_view_menuAction)
        self.view_menu.addAction(self.menuWorkspace.menuAction())
        self.view_menu.addAction(self.verticalRwyBoxLayout_view_action)
        self.view_menu.addSeparator()
        self.view_menu.addAction(self.towerView_view_action)
        self.view_menu.addAction(self.viewpointSelection_view_menuAction)
        self.view_menu.addAction(self.additionalViews_menu.menuAction())
        self.view_menu.addSeparator()
        self.view_menu.addAction(self.teachingConsole_view_action)
        self.view_menu.addAction(self.unitConversionTool_view_action)
        self.view_menu.addAction(self.worldAirportNavigator_view_action)
        self.view_menu.addAction(self.environmentInfo_view_action)
        self.help_menu.addAction(self.quickReference_help_action)
        self.help_menu.addAction(self.FAQ_help_action)
        self.help_menu.addAction(self.videoTutorial_help_action)
        self.help_menu.addSeparator()
        self.help_menu.addAction(self.about_help_action)
        self.options_menu.addAction(self.notificationSounds_options_action)
        self.options_menu.addSeparator()
        self.options_menu.addAction(self.primaryRadar_options_action)
        self.options_menu.addAction(self.approachSpacingHints_options_action)
        self.options_menu.addAction(self.runwayOccupationWarnings_options_action)
        self.options_menu.addAction(self.routeConflictWarnings_options_action)
        self.options_menu.addAction(self.trafficIdentification_options_action)
        self.options_menu.addSeparator()
        self.options_menu.addAction(self.runwaysInUse_options_action)
        self.options_menu.addAction(self.generalSettings_options_action)
        self.towerView_cheat_menu.addAction(self.ensureClearWeather_cheat_action)
        self.towerView_cheat_menu.addAction(self.ensureDayLight_cheat_action)
        self.towerView_cheat_menu.addAction(self.changeTowerHeight_cheat_action)
        self.solo_cheat_menu.addAction(self.pauseSimulation_cheat_action)
        self.solo_cheat_menu.addSeparator()
        self.solo_cheat_menu.addAction(self.popUpMsgOnRejectedInstr_cheat_action)
        self.solo_cheat_menu.addAction(self.showRecognisedVoiceStrings_cheat_action)
        self.solo_cheat_menu.addSeparator()
        self.solo_cheat_menu.addAction(self.spawnAircraft_cheat_action)
        self.solo_cheat_menu.addAction(self.killSelectedAircraft_cheat_action)
        self.cheat_menu.addAction(self.solo_cheat_menu.menuAction())
        self.cheat_menu.addAction(self.towerView_cheat_menu.menuAction())
        self.cheat_menu.addAction(self.radarCheatMode_cheat_action)
        self.cheat_menu.addAction(self.recallDiscardedStrip_cheat_action)
        self.menubar.addAction(self.system_menu.menuAction())
        self.menubar.addAction(self.view_menu.menuAction())
        self.menubar.addAction(self.options_menu.menuAction())
        self.menubar.addAction(self.cheat_menu.menuAction())
        self.menubar.addAction(self.help_menu.menuAction())
        self.general_toolbar.addAction(self.environmentInfo_view_action)
        self.general_toolbar.addAction(self.worldAirportNavigator_view_action)
        self.general_toolbar.addAction(self.unitConversionTool_view_action)
        self.general_toolbar.addSeparator()
        self.general_toolbar.addAction(self.soloSessionSettings_system_action)
        self.general_toolbar.addSeparator()
        self.general_toolbar.addAction(self.generalSettings_options_action)
        self.general_toolbar.addAction(self.runwaysInUse_options_action)
        self.docks_toolbar.addAction(self.handovers_dockView_action)
        self.docks_toolbar.addAction(self.atcTextChat_dockView_action)
        self.docks_toolbar.addAction(self.cpdlc_dockView_action)
        self.docks_toolbar.addAction(self.FPLs_dockView_action)
        self.docks_toolbar.addAction(self.instructions_dockView_action)
        self.docks_toolbar.addAction(self.navpoints_dockView_action)
        self.docks_toolbar.addAction(self.notepads_dockView_action)
        self.docks_toolbar.addAction(self.notificationArea_dockView_action)
        self.docks_toolbar.addAction(self.fgcom_dockView_action)
        self.docks_toolbar.addAction(self.runwayBoxes_dockView_action)
        self.docks_toolbar.addAction(self.radarContactDetails_dockView_action)
        self.docks_toolbar.addAction(self.strips_dockView_action)
        self.docks_toolbar.addAction(self.radioTextChat_dockView_action)
        self.docks_toolbar.addAction(self.towerView_dockView_action)
        self.docks_toolbar.addAction(self.weather_dockView_action)
        self.stripActions_toolbar.addAction(self.newStrip_action)
        self.stripActions_toolbar.addAction(self.newLinkedStrip_action)
        self.stripActions_toolbar.addAction(self.newFPL_action)
        self.stripActions_toolbar.addAction(self.newLinkedFPL_action)
        self.workspace_toolbar.addAction(self.newRadarScreen_view_action)
        self.workspace_toolbar.addAction(self.newLooseStripBay_view_action)
        self.workspace_toolbar.addAction(self.newStripRackPanel_view_action)
        self.workspace_toolbar.addSeparator()
        self.workspace_toolbar.addAction(self.popOutCurrentWindow_view_action)
        self.workspace_toolbar.addAction(self.reclaimPoppedOutWindows_view_action)
        self.radarAssistance_toolbar.addAction(self.primaryRadar_options_action)
        self.radarAssistance_toolbar.addAction(self.approachSpacingHints_options_action)
        self.radarAssistance_toolbar.addAction(self.runwayOccupationWarnings_options_action)
        self.radarAssistance_toolbar.addAction(self.routeConflictWarnings_options_action)
        self.radarAssistance_toolbar.addAction(self.trafficIdentification_options_action)

        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "ATC-pie"))
        self.system_menu.setTitle(_translate("mainWindow", "System"))
        self.system_reload_menu.setTitle(_translate("mainWindow", "Reload"))
        self.menuTools.setTitle(_translate("mainWindow", "Tools"))
        self.view_menu.setTitle(_translate("mainWindow", "View"))
        self.additionalViews_menu.setTitle(_translate("mainWindow", "Additional views"))
        self.menuDocks.setTitle(_translate("mainWindow", "Docks"))
        self.menuWorkspace.setTitle(_translate("mainWindow", "Workspace"))
        self.help_menu.setTitle(_translate("mainWindow", "Help"))
        self.options_menu.setTitle(_translate("mainWindow", "Options"))
        self.cheat_menu.setTitle(_translate("mainWindow", "Cheat"))
        self.towerView_cheat_menu.setTitle(_translate("mainWindow", "Tower view"))
        self.solo_cheat_menu.setTitle(_translate("mainWindow", "Solo sessions"))
        self.FPLlist_dock.setWindowTitle(_translate("mainWindow", "Flight plans"))
        self.radioTextChat_dock.setWindowTitle(_translate("mainWindow", "Radio text chat"))
        self.radio_dock.setWindowTitle(_translate("mainWindow", "Radios"))
        self.selection_info_dock.setWindowTitle(_translate("mainWindow", "Contact details"))
        self.weather_dock.setWindowTitle(_translate("mainWindow", "Weather"))
        self.strip_dock.setWindowTitle(_translate("mainWindow", "Strip racks"))
        self.navigator_dock.setWindowTitle(_translate("mainWindow", "Navigator"))
        self.notification_dock.setWindowTitle(_translate("mainWindow", "Notifications"))
        self.notepads_dock.setWindowTitle(_translate("mainWindow", "Notepads"))
        self.handover_dock.setWindowTitle(_translate("mainWindow", "ATCs"))
        self.instructions_dock.setWindowTitle(_translate("mainWindow", "Instructions"))
        self.towerView_dock.setWindowTitle(_translate("mainWindow", "Tower view controller"))
        self.general_toolbar.setWindowTitle(_translate("mainWindow", "General toolbar"))
        self.docks_toolbar.setWindowTitle(_translate("mainWindow", "Dockable panels"))
        self.stripActions_toolbar.setWindowTitle(_translate("mainWindow", "Strip/FPL actions"))
        self.workspace_toolbar.setWindowTitle(_translate("mainWindow", "Workspace windows"))
        self.selectionInfo_toolbar.setWindowTitle(_translate("mainWindow", "Selected contact"))
        self.rwyBoxes_dock.setWindowTitle(_translate("mainWindow", "RWY boxes"))
        self.atcTextChat_dock.setWindowTitle(_translate("mainWindow", "ATC text chat"))
        self.radarAssistance_toolbar.setWindowTitle(_translate("mainWindow", "Radar assistance"))
        self.CPDLC_dock.setWindowTitle(_translate("mainWindow", "CPDLC"))
        self.FPLs_dockView_action.setText(_translate("mainWindow", "Flight plans"))
        self.FPLs_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+F"))
        self.fgcom_dockView_action.setText(_translate("mainWindow", "Radios"))
        self.fgcom_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+R"))
        self.radarContactDetails_dockView_action.setText(_translate("mainWindow", "Radar contact details"))
        self.radarContactDetails_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+D"))
        self.connectFlightGearMP_system_action.setText(_translate("mainWindow", "FlightGear multi-player"))
        self.quit_system_action.setText(_translate("mainWindow", "Quit"))
        self.about_help_action.setText(_translate("mainWindow", "About ATC-pie..."))
        self.radioTextChat_dockView_action.setText(_translate("mainWindow", "Radio text chat"))
        self.radioTextChat_dockView_action.setToolTip(_translate("mainWindow", "Public text chat"))
        self.radioTextChat_dockView_action.setShortcut(_translate("mainWindow", "F8"))
        self.weather_dockView_action.setText(_translate("mainWindow", "Weather"))
        self.weather_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+W"))
        self.strips_dockView_action.setText(_translate("mainWindow", "Strips and racks"))
        self.strips_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+S"))
        self.navpoints_dockView_action.setText(_translate("mainWindow", "Map point navigator"))
        self.navpoints_dockView_action.setShortcut(_translate("mainWindow", "F7"))
        self.radarCheatMode_cheat_action.setText(_translate("mainWindow", "Radar cheat mode"))
        self.generalSettings_options_action.setText(_translate("mainWindow", "General settings..."))
        self.generalSettings_options_action.setShortcut(_translate("mainWindow", "F11"))
        self.notificationArea_dockView_action.setText(_translate("mainWindow", "Notification log"))
        self.notificationArea_dockView_action.setToolTip(_translate("mainWindow", "Notifications"))
        self.notificationArea_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+L"))
        self.environmentInfo_view_action.setText(_translate("mainWindow", "Environment info..."))
        self.environmentInfo_view_action.setShortcut(_translate("mainWindow", "Alt+I"))
        self.fgcomEchoTest_system_action.setText(_translate("mainWindow", "FGCom echo test..."))
        self.announceFgSession_system_action.setText(_translate("mainWindow", "Announce a FlightGear session..."))
        self.soloSessionSettings_system_action.setText(_translate("mainWindow", "Solo simulation options..."))
        self.soloSessionSettings_system_action.setShortcut(_translate("mainWindow", "Shift+F11"))
        self.quickReference_help_action.setText(_translate("mainWindow", "Quick reference"))
        self.quickReference_help_action.setShortcut(_translate("mainWindow", "F1"))
        self.notepads_dockView_action.setText(_translate("mainWindow", "Notepads"))
        self.notepads_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+N"))
        self.primaryRadar_options_action.setText(_translate("mainWindow", "Activate primary radar"))
        self.primaryRadar_options_action.setShortcut(_translate("mainWindow", "Alt+P"))
        self.handovers_dockView_action.setText(_translate("mainWindow", "ATCs and handovers"))
        self.handovers_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+A"))
        self.repositionBgImages_system_action.setText(_translate("mainWindow", "Image positioning helper..."))
        self.repositionBgImages_system_action.setStatusTip(_translate("mainWindow", "Tune position of drawing currently visible on main radar scope"))
        self.soloSession_system_action.setText(_translate("mainWindow", "Solo simulation"))
        self.instructions_dockView_action.setText(_translate("mainWindow", "Instructions"))
        self.instructions_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+I"))
        self.killSelectedAircraft_cheat_action.setText(_translate("mainWindow", "Kill selected aircraft"))
        self.pauseSimulation_cheat_action.setText(_translate("mainWindow", "Pause simulation"))
        self.pauseSimulation_cheat_action.setShortcut(_translate("mainWindow", "Pause"))
        self.routeConflictWarnings_options_action.setText(_translate("mainWindow", "Route conflict warnings"))
        self.routeConflictWarnings_options_action.setShortcut(_translate("mainWindow", "Alt+C"))
        self.runwaysInUse_options_action.setText(_translate("mainWindow", "Runway use..."))
        self.runwaysInUse_options_action.setShortcut(_translate("mainWindow", "Alt+R"))
        self.towerView_view_action.setText(_translate("mainWindow", "Tower view"))
        self.recallDiscardedStrip_cheat_action.setText(_translate("mainWindow", "Recall sent/deleted strips..."))
        self.towerView_dockView_action.setText(_translate("mainWindow", "Tower view controller"))
        self.towerView_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+V"))
        self.ensureDayLight_cheat_action.setText(_translate("mainWindow", "Force day light"))
        self.ensureClearWeather_cheat_action.setText(_translate("mainWindow", "Ensure clear weather"))
        self.videoTutorial_help_action.setText(_translate("mainWindow", "Video tutorial (in web browser)"))
        self.changeTowerHeight_cheat_action.setText(_translate("mainWindow", "Change tower height..."))
        self.spawnAircraft_cheat_action.setText(_translate("mainWindow", "Spawn new aircraft..."))
        self.reloadBgImages_system_action.setText(_translate("mainWindow", "Background images"))
        self.reloadBgImages_system_action.setShortcut(_translate("mainWindow", "Alt+Shift+F12"))
        self.reloadRoutePresets_system_action.setText(_translate("mainWindow", "Route presets"))
        self.teacherSession_system_action.setText(_translate("mainWindow", "Teacher session"))
        self.studentSession_system_action.setText(_translate("mainWindow", "Student session"))
        self.systemSettings_system_action.setText(_translate("mainWindow", "System settings..."))
        self.systemSettings_system_action.setShortcut(_translate("mainWindow", "Alt+Shift+F11"))
        self.addViewer_view_action.setText(_translate("mainWindow", "Register new viewer..."))
        self.removeViewer_view_action.setText(_translate("mainWindow", "Remove viewer..."))
        self.activateAdditionalViewers_view_action.setText(_translate("mainWindow", "Activate"))
        self.listViewers_view_action.setText(_translate("mainWindow", "List viewers..."))
        self.openStreetMap_system_action.setText(_translate("mainWindow", "OpenStreetMap (in web browser)"))
        self.reloadColourConfig_system_action.setText(_translate("mainWindow", "Colour configuration"))
        self.reloadColourConfig_system_action.setShortcut(_translate("mainWindow", "Alt+F12"))
        self.notificationSounds_options_action.setText(_translate("mainWindow", "Notification sounds"))
        self.notificationSounds_options_action.setShortcut(_translate("mainWindow", "Alt+S"))
        self.changeLocation_system_action.setText(_translate("mainWindow", "Change location..."))
        self.runwayOccupationWarnings_options_action.setText(_translate("mainWindow", "Monitor runway occupation"))
        self.toolbars_view_menuAction.setText(_translate("mainWindow", "Toolbars"))
        self.trafficIdentification_options_action.setText(_translate("mainWindow", "Traffic identification assistant"))
        self.newStrip_action.setText(_translate("mainWindow", "New strip"))
        self.newStrip_action.setToolTip(_translate("mainWindow", "New racked strip"))
        self.newStrip_action.setShortcut(_translate("mainWindow", "F2"))
        self.newFPL_action.setText(_translate("mainWindow", "New FPL"))
        self.newFPL_action.setToolTip(_translate("mainWindow", "New flight plan"))
        self.newFPL_action.setShortcut(_translate("mainWindow", "F3"))
        self.newLinkedStrip_action.setText(_translate("mainWindow", "New linked strip"))
        self.newLinkedStrip_action.setToolTip(_translate("mainWindow", "New racked strip linked to selection"))
        self.newLinkedStrip_action.setShortcut(_translate("mainWindow", "Shift+F2"))
        self.newLinkedFPL_action.setText(_translate("mainWindow", "New linked FPL"))
        self.newLinkedFPL_action.setToolTip(_translate("mainWindow", "New flight plan linked to selection"))
        self.newLinkedFPL_action.setShortcut(_translate("mainWindow", "Shift+F3"))
        self.reloadAdditionalViewers_system_action.setText(_translate("mainWindow", "Additional views"))
        self.startTimer1_action.setText(_translate("mainWindow", "Start timer 1"))
        self.startTimer1_action.setShortcut(_translate("mainWindow", "F5"))
        self.startTimer2_action.setText(_translate("mainWindow", "Start timer 2"))
        self.startTimer2_action.setShortcut(_translate("mainWindow", "F6"))
        self.forceStartTimer1_action.setText(_translate("mainWindow", "Start timer 1 (force)"))
        self.forceStartTimer1_action.setShortcut(_translate("mainWindow", "Shift+F5"))
        self.forceStartTimer2_action.setText(_translate("mainWindow", "Start timer 2 (force)"))
        self.forceStartTimer2_action.setShortcut(_translate("mainWindow", "Shift+F6"))
        self.saveDockLayout_view_action.setText(_translate("mainWindow", "Save current layout"))
        self.saveDockLayout_view_action.setShortcut(_translate("mainWindow", "Shift+F12"))
        self.recallWindowState_view_action.setText(_translate("mainWindow", "Restore saved layout"))
        self.recallWindowState_view_action.setToolTip(_translate("mainWindow", "Recall saved state"))
        self.recallWindowState_view_action.setShortcut(_translate("mainWindow", "F12"))
        self.locationSettings_system_action.setText(_translate("mainWindow", "Location set-up..."))
        self.locationSettings_system_action.setShortcut(_translate("mainWindow", "Alt+F11"))
        self.viewpointSelection_view_menuAction.setText(_translate("mainWindow", "Active viewpoint"))
        self.showRecognisedVoiceStrings_cheat_action.setText(_translate("mainWindow", "Show recognised voice strings in status bar"))
        self.popUpMsgOnRejectedInstr_cheat_action.setText(_translate("mainWindow", "Pop up message on rejected/unanswered instruction"))
        self.approachSpacingHints_options_action.setText(_translate("mainWindow", "Approach spacing hints"))
        self.approachSpacingHints_options_action.setShortcut(_translate("mainWindow", "Alt+A"))
        self.airportGateway_system_action.setText(_translate("mainWindow", "Airport gateway (in web browser)"))
        self.measuringLogsCoordinates_system_action.setText(_translate("mainWindow", "Log coordinates of radar measurements"))
        self.newLooseStripBay_view_action.setText(_translate("mainWindow", "New loose strip bay"))
        self.newRadarScreen_view_action.setText(_translate("mainWindow", "New radar screen"))
        self.popOutCurrentWindow_view_action.setText(_translate("mainWindow", "Pop out current window"))
        self.popOutCurrentWindow_view_action.setToolTip(_translate("mainWindow", "Pop out current window"))
        self.windowedWorkspace_view_action.setText(_translate("mainWindow", "Windowed view"))
        self.newStripRackPanel_view_action.setText(_translate("mainWindow", "New rack panel"))
        self.newStripRackPanel_view_action.setToolTip(_translate("mainWindow", "New rack panel"))
        self.runwayBoxes_dockView_action.setText(_translate("mainWindow", "Runway boxes"))
        self.runwayBoxes_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+B"))
        self.reclaimPoppedOutWindows_view_action.setText(_translate("mainWindow", "Reclaim popped out windows"))
        self.extractSectorFile_system_action.setText(_translate("mainWindow", "Extract drawings from sector file..."))
        self.atcTextChat_dockView_action.setText(_translate("mainWindow", "ATC text chat"))
        self.atcTextChat_dockView_action.setShortcut(_translate("mainWindow", "Shift+F8"))
        self.unitConversionTool_view_action.setText(_translate("mainWindow", "Unit conversion tool"))
        self.unitConversionTool_view_action.setShortcut(_translate("mainWindow", "Alt+U"))
        self.worldAirportNavigator_view_action.setText(_translate("mainWindow", "World airport browser"))
        self.worldAirportNavigator_view_action.setShortcut(_translate("mainWindow", "Shift+F7"))
        self.cpdlc_dockView_action.setText(_translate("mainWindow", "CPDLC"))
        self.cpdlc_dockView_action.setShortcut(_translate("mainWindow", "Alt+Shift+C"))
        self.reloadEntryExitPoints_system_action.setText(_translate("mainWindow", "AD entry/exit points"))
        self.teachingConsole_view_action.setText(_translate("mainWindow", "Teaching console"))
        self.teachingConsole_view_action.setShortcut(_translate("mainWindow", "Alt+T"))
        self.FAQ_help_action.setText(_translate("mainWindow", "Frequently asked questions (in web browser)"))
        self.verticalRwyBoxLayout_view_action.setText(_translate("mainWindow", "Vertical RWY box layout"))

from gui.panels.cpdlcPanels import CpdlcPanel
from gui.panels.flightPlans import FlightPlansPanel
from gui.panels.handover import HandoverPane
from gui.panels.instructions import InstructionsPanel
from gui.panels.navigator import NavigatorFrame
from gui.panels.notepads import NotepadPane
from gui.panels.notifier import NotifierFrame
from gui.panels.radioCentre import RadioCentrePane
from gui.panels.selectionInfo import SelectionInfoPane
from gui.panels.stripPanes import RunwayBoxPanel, StripRacksPane
from gui.panels.textChat import AtcTextChatPanel, RadioTextChatPanel
from gui.panels.towerView import TowerViewControllerPane
from gui.panels.weather import WeatherPane
